Eric Lau, Yaru Luo -- YikEs
SoftDev2 pd1
K17 -- Deeper Into D3
2020-04-08

Transitions @https://d3js.org/#transitions

    Note that in the following sample code the functions are indented with four spaces instead of two

    d3.selectAll("circle").transition()
        .duration(750)
        .delay(function(d, i) { return i * 10; })
        .attr("r", function(d) { return Math.sqrt(d * scale); });

    This is because the functions are modifying the present object instead of creating a new one.
    The convention in d3 is for functions that return a new object to be indented with 2 spaces.

    In function(d, i), the d represents the data and the i represents the index of the selection

    What is scale in Math.sqrt(d * scale)?

    What is Ur in Ur {_groups: Array(1), _parents: Array(1), _name: null, _id: 3}?
    Instead of Pt, which was returned when printing out selections, the transitions return Ur

Let's Make a Bar Chart, Part 1 @https://observablehq.com/@d3/lets-make-a-bar-chart

    Selecting an Element

        selection.node returns the element

            i.e. div.node() might return <div>Hello, World!</div>

    Chaining Methods

        use four spaces for methods that return the current selection
        use two spaces for methods that return something else

        reduces the number of one-time use variables by returning the same object
        with modifications

    Coding a Chart, Automatically

        selection.join does the job of entering, updating, and exiting data
        this is different from enter.append() which only does the job of entering

        When is it beneficial to use selection.join() rather than enter.append() and vice versa?

        selection.attr or selection.style can take in a constant value or a function value.

    Scaling to Fit

        using d3 scales allow d3 to take care of scaling the amount of space
        a data represents instead of hard coding the number of pixels ourselves.

        x = d3.scaleLinear()
            .domain([0, d3.max(data)])
            .range([0, 420])

        returns a function that maps inputted x values (data points) to the correct
        y value on the range.

        are there other types of scales besides linear?

Learn D3: Introduction @https://observablehq.com/@d3/learn-d3

    D3 is more concerned with providing easy manipulation of data and objects
    than providing prebuilt components and visualizations.
    Very customizable.

Learn D3: By Example @https://observablehq.com/@d3/learn-d3-by-example?collection=@d3/learn-d3
      Import statements:
      - Lets you quickly reuse code by importing named cells from other notebooks
      - With clause: a feature unique to Observable JavaScript

      Modification of height:
      - Customizable values can change the appearance of the y- or y-axis

      Dynamic data:
      - d3 enters and removes the data with joins
      - Enter, update, exit pattern
      - Allows for nice transitions between states
